services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certs:/etc/ssl/certs:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - webapp
      - keycloak
      - grafana
      - prometheus
    networks:
      - ${NETWORK_NAME:-monitoring}

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-23.0}
    container_name: keycloak
    restart: unless-stopped
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HOSTNAME=${DOMAIN:-rancher.local}
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_PROXY=edge
    command:
      - start-dev
      - --http-enabled=true
      - --http-relative-path=/auth
      - --hostname-strict=false
      - --proxy=edge
      - --hostname=${DOMAIN:-rancher.local}
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/auth/health/ready || curl -f http://localhost:8080/auth/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - ${NETWORK_NAME:-monitoring}

  keycloak-db:
    image: postgres:${POSTGRES_VERSION:-15-alpine}
    container_name: keycloak-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-keycloak}
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-${KEYCLOAK_DB_PASSWORD}}
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak} -d ${POSTGRES_DB:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ${NETWORK_NAME:-monitoring}

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://${DOMAIN:-rancher.local}/prometheus/'
      - '--web.route-prefix=/prometheus/'
      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME:-15d}'
      - '--storage.tsdb.retention.size=${PROMETHEUS_RETENTION_SIZE:-10GB}'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    networks:
      - ${NETWORK_NAME:-monitoring}

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_ROOT_URL=https://${DOMAIN:-rancher.local}/grafana/
      - GF_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Keycloak
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${GRAFANA_CLIENT_ID:-grafana}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${GRAFANA_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email roles
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${DOMAIN:-rancher.local}/auth/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${DOMAIN:-rancher.local}/auth/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://${DOMAIN:-rancher.local}/auth/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/userinfo
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'modify') && 'Editor' || 'Viewer'
      - GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN=false
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_LOG_LEVEL=${GRAFANA_LOG_LEVEL:-info}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - keycloak
      - prometheus
    networks:
      - ${NETWORK_NAME:-monitoring}

  rancher:
    image: rancher/rancher:${RANCHER_VERSION:-latest}
    container_name: rancher
    restart: unless-stopped
    privileged: true
    environment:
      - CATTLE_BOOTSTRAP_PASSWORD=${RANCHER_BOOTSTRAP_PASSWORD}
      - CATTLE_PASSWORD_MIN_LENGTH=${RANCHER_PASSWORD_MIN_LENGTH:-8}
      - CATTLE_SERVER_URL=https://${DOMAIN:-rancher.local}/rancher
      - CATTLE_UI_PATH=/rancher
      - CATTLE_FEATURES=${RANCHER_FEATURES:-}
      - AUDIT_LEVEL=${RANCHER_AUDIT_LEVEL:-0}
      - CATTLE_SYSTEM_DEFAULT_REGISTRY=${RANCHER_DEFAULT_REGISTRY:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - rancher_data:/var/lib/rancher
    networks:
      - ${NETWORK_NAME:-monitoring}

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: webapp
    restart: unless-stopped
    environment:
      - KEYCLOAK_URL=http://keycloak:8080/auth
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-master}
      - KEYCLOAK_CLIENT_ID=${WEBAPP_CLIENT_ID:-webapp}
      - KEYCLOAK_CLIENT_SECRET=${WEBAPP_CLIENT_SECRET}
      - SECRET_KEY=${WEBAPP_SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      - DOMAIN=${DOMAIN:-rancher.local}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-true}
      - SESSION_COOKIE_HTTPONLY=${SESSION_COOKIE_HTTPONLY:-true}
      - SESSION_COOKIE_SAMESITE=${SESSION_COOKIE_SAMESITE:-Lax}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - keycloak
    networks:
      - ${NETWORK_NAME:-monitoring}

volumes:
  keycloak_data:
    name: ${COMPOSE_PROJECT_NAME:-monitoring-portal}_keycloak_data
  grafana_data:
    name: ${COMPOSE_PROJECT_NAME:-monitoring-portal}_grafana_data
  prometheus_data:
    name: ${COMPOSE_PROJECT_NAME:-monitoring-portal}_prometheus_data
  rancher_data:
    name: ${COMPOSE_PROJECT_NAME:-monitoring-portal}_rancher_data
  nginx_logs:
    name: ${COMPOSE_PROJECT_NAME:-monitoring-portal}_nginx_logs

networks:
  monitoring:
    name: ${NETWORK_NAME:-monitoring}
    driver: bridge